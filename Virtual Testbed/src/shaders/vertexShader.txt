#version 400 core

in vec3 position;
in float colorValue;

out vec4 pass_color;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;

uniform float hue;
uniform float saturation;
uniform vec3 color;

vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main(void) {

	gl_Position = projectionMatrix*viewMatrix*transformationMatrix*vec4(position,1);
//	vec3 rgb = hsv2rgb(vec3(hue,saturation,colorValue));
	pass_color = vec4(color.x*colorValue,color.y*colorValue,color.z*colorValue,1);
}